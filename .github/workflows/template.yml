name: test-nodejs-mongoDB

# Actions syntax for running actions. TBD
# Specifies the trigger for this workflow. 
# This example uses the `push` event, so a workflow run is triggered every time someone pushes a change to the repository or merges a pull request.  
# This is triggered by a push to every branch; for examples of syntax that runs only on pushes to specific branches, paths, or tags
# run-name: ${{ github.actor }} is learning GitHub Actions


on:
  push:
    branches:
    - main

# Groups together all the jobs that run in the learn-github-actions workflow.
  # jobs: 
#   defines a job name
    # check-node-version:

# Configures the job to run on the latest version of an Ubuntu Linux runner. 
# This means that the job will execute on a fresh virtual machine hosted by GitHub
# PROBABLY HAVE TO USE THE RUNNER ON MY LOCAL MACHINE TBD

# example of self hosted
# jobs:
#   example-job:
#     runs-on: [self-hosted, linux, x64, gpu]


      # runs-on: ubuntu-latest
        # Groups together steps that run in the same job
        # steps:

        #step 1
        # The uses keyword specifies that this step will run v4 of the actions/checkout action. 
        # This is an action that checks out your repository onto the runner, 
        # allowing you to run scripts or other actions against your code (such as build and test tools). 
        # You should use the checkout action any time your workflow will use the repository's code.
        # - uses: actions/checkout@v4

        # This step uses the actions/setup-node@v3 action to install the specified version of the Node.js
        # This puts both the node and npm commands in your PATH.
        # step 2
        # - uses: actions/setup-node@v3
        # with:
        #   node-version: '14'

        # The run keyword tells the job to execute a command on the runner
        # - run: npm install -g bats

        #need secrets? This example job demonstrates how to reference an existing secret as an environment variable, 
        # and send it as a parameter to an example command.
        # env:
        #   super_secret: ${{ secrets.SUPERSECRET }}
        # run: |
        #   example-command "$super_secret"

      
    
